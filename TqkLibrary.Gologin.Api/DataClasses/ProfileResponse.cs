using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System;
using System.Collections.Generic;
using TqkLibrary.Gologin.Api.Enums;
using TqkLibrary.Gologin.Api.Interfaces;

namespace TqkLibrary.Gologin.Api
{
    public class ProfileResponse : IDataResponse
    {
        [JsonProperty("name")]
        public string? Name { get; set; }

        [JsonProperty("role")]
        public string? Role { get; set; }

        [JsonProperty("id")]
        public required string Id { get; set; }

        [JsonProperty("notes")]
        public string? Notes { get; set; }

        [JsonProperty("browserType")]
        public string? BrowserType { get; set; }

        [JsonProperty("lockEnabled")]
        public bool? LockEnabled { get; set; }

        [JsonProperty("timezone")]
        public Timezone? Timezone { get; set; }

        [JsonProperty("navigator")]
        public Navigator? Navigator { get; set; }

        [JsonProperty("geolocation")]
        public Geolocation? Geolocation { get; set; }

        [JsonProperty("debugMode")]
        public bool DebugMode { get; set; }

        [JsonProperty("isM1")]
        public bool? IsM1 { get; set; }

        [JsonProperty("isPinned")]
        public bool? IsPinned { get; set; }

        [JsonProperty("canBeRunning")]
        public bool? CanBeRunning { get; set; }

        [JsonProperty("runDisabledReason")]
        public object? RunDisabledReason { get; set; }

        [JsonProperty("os")]
        public string? Os { get; set; }

        [JsonProperty("osSpec")]
        public string? OsSpec { get; set; }

        [JsonProperty("proxy")]
        public Proxy? Proxy { get; set; }

        [JsonConverter(typeof(StringEnumConverter))]
        [JsonProperty("proxyType")]
        public ProxyMode ProxyType { get; set; } = ProxyMode.none;

        [JsonProperty("proxyRegion")]
        public string? ProxyRegion { get; set; }

        [JsonProperty("folders")]
        public List<object>? Folders { get; set; }

        [JsonProperty("sharedEmails")]
        public List<object>? SharedEmails { get; set; }

        [JsonProperty("createdAt")]
        public DateTime CreatedAt { get; set; }

        [JsonProperty("updatedAt")]
        public DateTime UpdatedAt { get; set; }

        [JsonProperty("s3Path")]
        public string? S3Path { get; set; }

        [JsonProperty("s3Date")]
        public string? S3Date { get; set; }

        [JsonProperty("createdInOs")]
        public string? CreatedInOs { get; set; }

        [JsonProperty("checkCookies")]
        public bool CheckCookies { get; set; }

        [JsonProperty("lastActivity")]
        public object? LastActivity { get; set; }

        [JsonProperty("chromeExtensions")]
        public List<string>? ChromeExtensions { get; set; }

        [JsonProperty("userChromeExtensions")]
        public List<string>? UserChromeExtensions { get; set; }

        [JsonProperty("isAutoGenerated")]
        public string? IsAutoGenerated { get; set; }

        [JsonProperty("tags")]
        public List<Tag>? Tags { get; set; }

        [JsonProperty("permissions")]
        public Permissions? Permissions { get; set; }

        [JsonProperty("proxyEnabled")]
        public bool? ProxyEnabled { get; set; }

        [JsonProperty("isBookmarksSynced")]
        public bool? IsBookmarksSynced { get; set; }

        [JsonProperty("defaultProps")]
        public ProfileDefaultProps? DefaultProps { get; set; }

        [JsonProperty("autoLang")]
        public bool? AutoLang { get; set; }
    }
}
